//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "category_parfumery")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub tile_picture_src: String,
    pub product_page_src: i32,
    #[sea_orm(column_type = "Text")]
    pub product_big_desc: String,
    pub old_price: Option<i32>,
    pub price: i32,
    pub title_id: i32,
    pub brand_id: i32,
    pub volume_id: i32,
    pub seasonality_id: i32,
    pub class_id: i32,
    pub visited_count: i32,
    pub bought_count: i32,
    pub wish_list_count: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::goods_list::Entity",
        from = "Column::TitleId",
        to = "super::goods_list::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    GoodsList,
    #[sea_orm(
        belongs_to = "super::parfumery_brand::Entity",
        from = "Column::BrandId",
        to = "super::parfumery_brand::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    ParfumeryBrand,
    #[sea_orm(
        belongs_to = "super::parfumery_class::Entity",
        from = "Column::ClassId",
        to = "super::parfumery_class::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    ParfumeryClass,
    #[sea_orm(
        belongs_to = "super::parfumery_seasonality::Entity",
        from = "Column::SeasonalityId",
        to = "super::parfumery_seasonality::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    ParfumerySeasonality,
    #[sea_orm(
        belongs_to = "super::parfumery_volume::Entity",
        from = "Column::VolumeId",
        to = "super::parfumery_volume::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    ParfumeryVolume,
    #[sea_orm(has_many = "super::search_goods::Entity")]
    SearchGoods,
    #[sea_orm(has_many = "super::wish_list::Entity")]
    WishList,
}

impl Related<super::goods_list::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::GoodsList.def()
    }
}

impl Related<super::parfumery_brand::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ParfumeryBrand.def()
    }
}

impl Related<super::parfumery_class::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ParfumeryClass.def()
    }
}

impl Related<super::parfumery_seasonality::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ParfumerySeasonality.def()
    }
}

impl Related<super::parfumery_volume::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ParfumeryVolume.def()
    }
}

impl Related<super::search_goods::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::SearchGoods.def()
    }
}

impl Related<super::wish_list::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::WishList.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
